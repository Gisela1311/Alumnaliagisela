# Generated by Django 5.1.2 on 2024-12-16 16:54

import app_alumnalia.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Comarca",
            fields=[
                (
                    "pk_com",
                    models.SmallAutoField(
                        primary_key=True, serialize=False, verbose_name="id de Comarca"
                    ),
                ),
                (
                    "nom_com",
                    models.CharField(
                        max_length=30, verbose_name="nombre de la Comarca"
                    ),
                ),
            ],
            options={
                "db_table": "Comarca",
            },
        ),
        migrations.CreateModel(
            name="Comarca_provincias",
            fields=[
                (
                    "pk_cam_pro",
                    models.SmallAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de Comarca_provincias",
                    ),
                ),
                (
                    "nom_cam_pro",
                    models.CharField(
                        max_length=30, verbose_name="nombre de la Comarca_provincias"
                    ),
                ),
            ],
            options={
                "db_table": "Comarca_provincias",
            },
        ),
        migrations.CreateModel(
            name="Dat_Per",
            fields=[
                (
                    "pk_per",
                    models.SmallAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de la Dat_Per",
                    ),
                ),
                (
                    "nom_per",
                    models.CharField(
                        max_length=150, verbose_name="Nombre de la Persona"
                    ),
                ),
                (
                    "dni_per",
                    models.CharField(
                        max_length=15,
                        unique=True,
                        validators=[app_alumnalia.models.validar_dni],
                        verbose_name="Nombre de la autoridad",
                    ),
                ),
                (
                    "fn_per",
                    models.CharField(
                        max_length=10,
                        null=True,
                        verbose_name="fecha de nacimiento de la persona",
                    ),
                ),
                (
                    "cn_per",
                    models.CharField(
                        max_length=150, verbose_name="Naciuonalidad de la persona"
                    ),
                ),
                (
                    "tel_per",
                    models.IntegerField(
                        null=True,
                        validators=[app_alumnalia.models.validar_longitud_nueve],
                        verbose_name="Teléfono de la persona",
                    ),
                ),
                (
                    "email_per",
                    models.EmailField(
                        max_length=254, verbose_name="email de la persona"
                    ),
                ),
                (
                    "dir_per",
                    models.CharField(
                        max_length=150, verbose_name="Dirección de la persona"
                    ),
                ),
                (
                    "sex_per",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Mujer"),
                            (2, "Hombre"),
                            (3, "Prefiero no específicar"),
                            (4, "Otro"),
                        ],
                        default="",
                        verbose_name="Género de la persona",
                    ),
                ),
                (
                    "uso_datos_per",
                    models.BooleanField(
                        default=True,
                        verbose_name="fines de gestión académica y administrativa",
                    ),
                ),
                (
                    "term_per",
                    models.BooleanField(
                        default=True, verbose_name="términos y condiciones"
                    ),
                ),
                (
                    "noti_per",
                    models.BooleanField(
                        default=True,
                        verbose_name="notificaciones de oportunidades formativas",
                    ),
                ),
            ],
            options={
                "db_table": "Dat_Per",
            },
        ),
        migrations.CreateModel(
            name="Estudio_Profesion",
            fields=[
                (
                    "pk_est_pro",
                    models.CharField(
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de Estudio Profecional",
                    ),
                ),
                (
                    "desc_est_pro",
                    models.CharField(
                        max_length=220,
                        verbose_name="Descripcion de la Estudio Profesional",
                    ),
                ),
            ],
            options={
                "db_table": "Estudio_Profesional",
            },
        ),
        migrations.CreateModel(
            name="Familia_Profesion",
            fields=[
                (
                    "pk_fm_pro",
                    models.CharField(
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de Entidad Formadora",
                    ),
                ),
                (
                    "desc_fm_pro",
                    models.CharField(
                        max_length=200,
                        verbose_name="Descripcion de la Familia Profesional",
                    ),
                ),
            ],
            options={
                "db_table": "Familia_Profesional",
            },
        ),
        migrations.CreateModel(
            name="OfertaEstudio",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("nom_Ofe_est", models.CharField(max_length=200)),
                ("inst_Ofe_est", models.CharField(max_length=200)),
                (
                    "niv_Ofe_est",
                    models.CharField(
                        choices=[
                            ("BACH", "Bachillerato"),
                            ("LIC", "Licenciatura"),
                            ("MAST", "Máster"),
                            ("DOC", "Doctorado"),
                        ],
                        max_length=5,
                    ),
                ),
                (
                    "mod_Ofe_est",
                    models.CharField(
                        choices=[
                            ("PRESENCIAL", "Presencial"),
                            ("ONLINE", "Online"),
                            ("MIXTO", "Mixto"),
                        ],
                        max_length=10,
                    ),
                ),
                ("dur_Ofe_est", models.IntegerField(help_text="Duración en meses")),
                ("desc_Ofe_est", models.TextField(blank=True, null=True)),
                ("fecha_inicio", models.DateField()),
                ("fecha_fin", models.DateField()),
                ("url_Ofe_est", models.URLField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name="Provincias",
            fields=[
                (
                    "pk_pro",
                    models.SmallAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de Provincias",
                    ),
                ),
                (
                    "nom_pro",
                    models.CharField(
                        max_length=30, verbose_name="nombre de la Provincia"
                    ),
                ),
            ],
            options={
                "db_table": "Provincias",
            },
        ),
        migrations.CreateModel(
            name="Inf_Prof",
            fields=[
                (
                    "pk_inf_pro",
                    models.SmallAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de la Información Profesional",
                    ),
                ),
                (
                    "tit_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Técnico/a"),
                            (2, "Grado universitario"),
                            (3, "Máster"),
                            (4, "Doctorado"),
                            (5, "Otros"),
                        ],
                        default="",
                        verbose_name="Título académico más alto obtenido",
                    ),
                ),
                (
                    "tit_esp_inf_pro",
                    models.CharField(
                        max_length=30, verbose_name="Especifique tit_inf_pro"
                    ),
                ),
                (
                    "esp_inf_pro",
                    models.CharField(
                        max_length=15,
                        verbose_name="¿En qué área está tu especialización principal?",
                    ),
                ),
                (
                    "exp_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Menos de 1 año"),
                            (2, "De 1 a 3 años"),
                            (3, "De 4 a 6 años"),
                            (4, "Más de 6 años"),
                        ],
                        default="",
                        verbose_name="¿Cuántos años de experiencia tienes como formador/a?",
                    ),
                ),
                (
                    "for_imp_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Formación profesional"),
                            (2, "Formación universitaria"),
                            (3, "Formación empresarial"),
                            (4, "Cursos en línea"),
                            (5, "Otros"),
                        ],
                        default="",
                        verbose_name="Qué tipo de formación has impartido",
                    ),
                ),
                (
                    "for_imp_esp_inf_pro",
                    models.CharField(
                        max_length=255,
                        verbose_name="Especifique que for_imp_inf_pro ha impartido",
                    ),
                ),
                (
                    "cv_adj_inf_pro",
                    models.FileField(
                        upload_to="pdfs/",
                        verbose_name="Adjunta tu currículum en formato PDF.",
                    ),
                ),
                (
                    "cert_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Sí"),
                            (2, "No"),
                            (3, "Especificar"),
                        ],
                        default="",
                        verbose_name="¿Tienes alguna certificación docente?",
                    ),
                ),
                (
                    "cert_esp_inf_pro",
                    models.CharField(
                        max_length=30, verbose_name="Especifique su cert_inf_pro"
                    ),
                ),
                (
                    "herr_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Moodle"),
                            (2, "Microsoft Teams"),
                            (3, "Zoom"),
                            (4, "Google Classroom"),
                            (5, "Otros"),
                        ],
                        default="",
                        verbose_name="¿Qué herramientas tecnológicas utilizas en tus clases?",
                    ),
                ),
                (
                    "herr_esp_inf_pro",
                    models.CharField(
                        max_length=15, verbose_name="Especifique otra herr_inf_pro"
                    ),
                ),
                (
                    "comp_dig_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Sí"),
                            (2, "No"),
                            (3, "Especificar"),
                        ],
                        default="",
                        verbose_name="¿Posees competencias digitales específicas (ej. DigCompEdu)?",
                    ),
                ),
                (
                    "comp_dig_esp_inf_pro",
                    models.CharField(max_length=15, verbose_name="Especifique cuales"),
                ),
                (
                    "mod_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Presencial"),
                            (2, "En línea"),
                            (3, "Mixta"),
                        ],
                        default="1",
                        verbose_name="Qué modalidades de enseñanza prefieres impartir",
                    ),
                ),
                (
                    "tipo_alu_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Jóvenes"),
                            (2, "Adultos"),
                            (3, "Empresas"),
                            (4, "Otros"),
                        ],
                        default="",
                        verbose_name="Qué tipo de alumnado prefieres formar",
                    ),
                ),
                (
                    "tipo_alu_esp_inf_pro",
                    models.CharField(
                        max_length=15, verbose_name="Especifique tipo_alu_inf_pro"
                    ),
                ),
                (
                    "franja_inf_pro",
                    models.IntegerField(
                        choices=[
                            ("", "Seleccione una opción"),
                            (1, "Mañana (8:00-14:00)"),
                            (2, "Tarde (14:00-20:00)"),
                            (3, "Noche (20:00-23:00)"),
                        ],
                        default="",
                        verbose_name="En qué franjas horarias estás disponible para impartir clases?",
                    ),
                ),
                (
                    "fk_per_inf_pro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="app_alumnalia.dat_per",
                        verbose_name="es la fk de Datos de personas",
                    ),
                ),
            ],
            options={
                "db_table": "Inf_Prof",
            },
        ),
        migrations.CreateModel(
            name="Municipios",
            fields=[
                (
                    "pk_mun",
                    models.SmallAutoField(
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de Municipios",
                    ),
                ),
                (
                    "nom_mun",
                    models.CharField(
                        max_length=30, verbose_name="nombre de la Municipios"
                    ),
                ),
                (
                    "fk_com",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Municipios",
                        to="app_alumnalia.comarca",
                    ),
                ),
            ],
            options={
                "db_table": "Municipios",
            },
        ),
        migrations.CreateModel(
            name="Ent_For",
            fields=[
                (
                    "pk_ent_for",
                    models.CharField(
                        max_length=20,
                        primary_key=True,
                        serialize=False,
                        verbose_name="id de Entidad Formadora",
                    ),
                ),
                (
                    "nom_ent_for",
                    models.CharField(
                        max_length=44, verbose_name="nombre de Entidad Formadora"
                    ),
                ),
                (
                    "Area_for_ent_for",
                    models.CharField(
                        max_length=44,
                        verbose_name="area de formacion de Entidad Formadora",
                    ),
                ),
                (
                    "email_ent_for",
                    models.EmailField(
                        max_length=254, verbose_name="correo de la entidad"
                    ),
                ),
                (
                    "nif_ent_for",
                    models.CharField(
                        max_length=20, verbose_name="NIF de Entidad Formadora"
                    ),
                ),
                ("fec_fin_ent_for", models.DateField(verbose_name="Fecha de fin")),
                ("fec_ini_ent_for", models.DateField(verbose_name="Fecha de inicio")),
                (
                    "area_prof_ent_for",
                    models.CharField(
                        max_length=44,
                        verbose_name="Area Porfecional de Entidad Formadora",
                    ),
                ),
                (
                    "cm_ent_for",
                    models.CharField(
                        max_length=5,
                        verbose_name="Codigo del municipio de Entidad Formadora",
                    ),
                ),
                (
                    "web_ent_for",
                    models.CharField(
                        max_length=100,
                        verbose_name="link de la web de Entidad Formadora",
                    ),
                ),
                (
                    "horas_ent_for",
                    models.IntegerField(verbose_name="horas de la Entidad Formadora"),
                ),
                (
                    "idt_ent_for",
                    models.IntegerField(
                        verbose_name="identificador de la Entiad Formadora"
                    ),
                ),
                (
                    "den_ent_for",
                    models.CharField(
                        max_length=100, verbose_name="Denominacion de Entidad Formadora"
                    ),
                ),
                (
                    "amb_ent_for",
                    models.CharField(
                        max_length=100, verbose_name="Ambito de Entidad Formadora"
                    ),
                ),
                (
                    "mod_ent_for",
                    models.CharField(
                        max_length=50, verbose_name="Modalidad de Entidad Formadora"
                    ),
                ),
                (
                    "num_grupo",
                    models.IntegerField(
                        verbose_name="Numero de grupo de la Entidad Formadora"
                    ),
                ),
                (
                    "telefono",
                    models.CharField(
                        max_length=15,
                        validators=[app_alumnalia.models.validar_longitud_nueve],
                        verbose_name="telefono de Entidad Formadora",
                    ),
                ),
                (
                    "fk_com_ent_for",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Comarca",
                        to="app_alumnalia.comarca",
                    ),
                ),
                (
                    "fk_fam_pro",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Familia_Profesion",
                        to="app_alumnalia.familia_profesion",
                    ),
                ),
                (
                    "fk_mun_ent_for",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="Municipios",
                        to="app_alumnalia.municipios",
                    ),
                ),
            ],
            options={
                "db_table": "Ent_For",
            },
        ),
    ]
